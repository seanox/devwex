<?xml version="1.0" ?>
<project name="devwex" default="usage" basedir="..">
  <target name="usage">
    <echo>                                                    </echo>
    <echo>Following targets are available...                  </echo>
    <echo>                                                    </echo>
    <echo>   compile   compile and build classes              </echo>
    <echo>                                                    </echo>
    <echo>   release   compile, build classes and make        </echo>
    <echo>             releases for distribution and          </echo> 
    <echo>             development                            </echo>
    <echo>                                                    </echo>
    <echo>   keystore  creates a new keystore                 </echo>
    <echo>                                                    </echo>
    <echo>   changes   Synchronizes README.md with CHANGES.   </echo>
  </target>
    
  <property name="workspace" value="${basedir}"/>
  <property name="workspace.sources" value="${workspace}/sources"/>
  <property name="workspace.program" value="${workspace}/program"/>
  <property name="workspace.development" value="${workspace}/development"/>
  <property name="workspace.extras" value="${workspace.development}/extras"/>
  <property name="workspace.release" value="${workspace}/release"/>
  
  <property name="build" value="${workspace}/build"/>
  <property name="build.project" value="${build}/${ant.project.name}"/>
  <property name="build.sources" value="${build.project}/sources"/>
  <property name="build.classes" value="${build.project}/classes"/>
  
  <property name="compile.target" value="5"/>
  <property name="compile.source" value="5"/>
  <property name="compile.debug" value="off"/>
  <property name="compile.optimize" value="on"/>
  <property name="compile.deprecation" value="on"/>
  
  <macrodef name="release-locate">
    <sequential>
      <copy file="${workspace}/CHANGES" tofile="${workspace}/CHANGES.tmp" overwrite="true"/>
      <replaceregexp file="${workspace}/CHANGES.tmp"
          match="(?s)^\s*([\d\.x]+) (\d{4})([\dx]+).*$" flags="g" byline="false"
          replace="release.version=\1&#x000D;release.year=\2&#x000D;release.date=\2\3&#x000D;"/>
      <replaceregexp file="${workspace}/CHANGES.tmp" match="x+" replace="0000" flags="g" byline="false"/>
      <loadproperties srcfile="${workspace}/CHANGES.tmp"/>
      <delete file="${workspace}/CHANGES.tmp"/>
    </sequential>
  </macrodef>  

  <fileset id="release.sources.fileset" dir="${build}">
    <include name="**/*.cmd"/>
    <include name="**/*.java"/>
    <include name="**/*.html"/>
  </fileset>  

  <macrodef name="release-insert">
    <sequential>
      <replaceregexp match="(?&lt;!\.)0\.0\.0(?!\.)" flags="g" byline="false"
          replace="${release.version}">
        <fileset refid="release.sources.fileset"/>
      </replaceregexp>
      <replaceregexp match="(?&lt;=\s)0000(?=\s)" flags="g" byline="false"
          replace="${release.year}">
        <fileset refid="release.sources.fileset"/>
      </replaceregexp>
      <replaceregexp match="\b00000000\b" flags="g" byline="false"
          replace="${release.date}">
        <fileset refid="release.sources.fileset"/>
      </replaceregexp>
    </sequential>
  </macrodef>
  
  <macrodef name="compress-markup-insert">
    <attribute name="file"/>
    <attribute name="context"/>
    <attribute name="content"/>
    <sequential>
      <replaceregexp file="@{file}" match="^(\s*)&lt;meta content=&quot;/([^/&quot;]+)/([^/&quot;]+\.css)&quot;/&gt;" flags="g" byline="true"
          replace="\1&lt;style&gt;${line.separator}:::\2.\3${line.separator}\1&lt;/style&gt;"/>
      <replaceregexp file="@{file}" match="^(\s*)&lt;meta content=&quot;/([^/&quot;]+)/([^/&quot;]+\.js)&quot;/&gt;" flags="g" byline="true"
          replace="\1&lt;script type=&quot;text/javascript&quot;&gt;${line.separator}:::\2.\3${line.separator}\1&lt;/script&gt;"/>
      <replace file="@{file}" token=":::@{context}.@{content}" value="${file.@{context}.@{content}}"/>
    </sequential>
  </macrodef>

  <macrodef name="compress-markup-clean">
    <attribute name="file"/>
    <sequential>
      <replaceregexp file="@{file}" match="(?s)[\r\n]+\s*&lt;link[^&gt;]+?&gt;" flags="g" byline="false" replace=""/>
      <replaceregexp file="@{file}" match="(?s)[\r\n]+\s*&lt;script[^&gt;]*?\ssrc=.*?&lt;/script&gt;" flags="g" byline="false" replace=""/>
      <replaceregexp file="@{file}" match="(?s)[\r\n]+\s*&lt;link[^&gt;]+?&gt;" flags="g" byline="false" replace=""/>
      <replaceregexp file="@{file}" match="(?s)(\s*)&lt;/style&gt;\s*&lt;style[^&lt;]*?&gt;\s*" flags="g" byline="false" replace="\1  "/>
      <replaceregexp file="@{file}" match="(?s)(\s*)&lt;/script&gt;\s*&lt;script[^&lt;]*?&gt;\s*" flags="g" byline="false" replace="\1  "/>
    </sequential>
  </macrodef>
  
  <macrodef name="compress-markup">
    <attribute name="file"/>
    <sequential>
      <echo>Compressing: @{file}</echo> 
      <compress-markup-insert file="@{file}" context="manuals" content="seanox-devwex.js"/>     
      <compress-markup-insert file="@{file}" context="manuals" content="seanox-devwex.css"/>
      <compress-markup-insert file="@{file}" context="system" content="common.css"/>     
      <compress-markup-insert file="@{file}" context="system" content="media.css"/>     
      <compress-markup-insert file="@{file}" context="system" content="index.css"/>          
      <compress-markup-insert file="@{file}" context="system" content="status.css"/>  
      <compress-markup-insert file="@{file}" context="documents" content="index.css"/>
      <compress-markup-clean file="@{file}"/>
      <replaceregexp file="@{file}" match="^\s+" flags="g" replace="" byline="false"/>
      <replaceregexp file="@{file}" match="\s+$" flags="g" replace="" byline="true"/>      
    </sequential>
  </macrodef>

  <macrodef name="compress-javascript">
    <attribute name="file"/>
    <attribute name="context"/>
    <sequential>
      <echo>Compressing: @{file}</echo> 
      <replaceregexp file="@{file}" match="(?s)(?&lt;!\\)\/\*.*?\*/" flags="g" replace="" byline="false"/>
      <replaceregexp file="@{file}" match="\s*//.*$" flags="g" replace="" byline="true"/>
      <replaceregexp file="@{file}" match="\t" flags="g" replace=" " byline="true"/>
      <replaceregexp file="@{file}" match="(?s)\s*[\r\n]+" flags="g" replace="${line.separator}" byline="false"/>
      <replaceregexp file="@{file}" match="(?s)(\{)[\r\n]+\s*" flags="g" replace="\1" byline="false"/>
      <replaceregexp file="@{file}" match="(?s)[\r\n]+ +(?=\})" flags="g" replace="" byline="false"/>
      <replaceregexp file="@{file}" match="(?s)[\r\n]+ +(?!\})" flags="g" replace=" " byline="false"/>
      <replaceregexp file="@{file}" match="(?s)[\r\n]+ *(\})" flags="g" replace="\1" byline="false"/>
      <replaceregexp file="@{file}" match="(?i)[\r\n]+([a-z0-9_\.]+\s*[=;])" flags="g" replace=" \1" byline="false"/>
      <replaceregexp file="@{file}" match="^\s+" flags="g" replace="" byline="false"/>
      <replaceregexp file="@{file}" match="\s+$" flags="g" replace="" byline="true"/>
      <replaceregexp file="@{file}" match="^(.*)$" flags="g" replace="      \1" byline="true"/>
      <basename property="@{context}.@{file}" file="@{file}"/>
      <loadfile property="file.@{context}.${@{context}.@{file}}" srcFile="@{file}"/>
      <delete file="@{file}"/>
    </sequential>
  </macrodef>

  <macrodef name="compress-stylesheet">
    <attribute name="file"/>
    <attribute name="context"/>
    <sequential>
      <echo>Compressing: @{file}</echo> 
      <replaceregexp file="@{file}" match="(?s)(?&lt;!\\)/\*.*?\*/" flags="g" replace="" byline="false"/>
      <replaceregexp file="@{file}" match="\t+" flags="g" replace=" " byline="true"/>
      <replaceregexp file="@{file}" match="(?i)\s(!important)" flags="g" replace="\1" byline="true"/>
      <replaceregexp file="@{file}" match="(?i)(\))\s+(?![a-z\s])" flags="g" replace="\1" byline="true"/>
      <replaceregexp file="@{file}" match="(?s)\s*[\r\n]+" flags="g" replace="${line.separator}" byline="false"/>
      <replaceregexp file="@{file}" match="(?s)\s*(:)\s*" flags="g" replace="\1" byline="false"/>
      <replaceregexp file="@{file}" match="(?s)\s*(\()\s*" flags="g" replace="\1" byline="false"/>
      <replaceregexp file="@{file}" match="(?i)(\s[a-z]+)\s+(\()" flags="g" replace="\1\2" byline="true"/>
      <replaceregexp file="@{file}" match="(?i)(\s(?:not|only|and))(\()" flags="g" replace="\1 \2" byline="true"/>
      <replaceregexp file="@{file}" match="(\))\s+(;)" flags="g" replace="\1\2" byline="true"/>
      <replaceregexp file="@{file}" match="(?s)(\))\s+(;)" flags="g" replace="\1\2" byline="false"/>
      <replaceregexp file="@{file}" match="(?s)\s*(\))\s*" flags="g" replace="\1 " byline="false"/>
      <replaceregexp file="@{file}" match="(?s)\s*(;) +" flags="g" replace="\1 " byline="false"/>
      <replaceregexp file="@{file}" match="(?&lt;=[^;\s\{\}])\s*(?=[\r\n]+\s*\})" flags="g" replace=";" byline="false"/>
      <replaceregexp file="@{file}" match="(?s)(,)\s*[\r\n]+\s*" flags="g" replace="\1 " byline="false"/>
      <replaceregexp file="@{file}" match="(?s)(;)\s*[\r\n]+\s*(?=[a-zA-Z])" flags="g" replace="\1 " byline="false"/>
      <replaceregexp file="@{file}" match="(?s)(;)\s*(\})" flags="g" replace="\1\2" byline="false"/>
      <replaceregexp file="@{file}" match="(?s)(\{ *)[\r\n]+" flags="g" replace="\1" byline="false"/>
      <replaceregexp file="@{file}" match="(\{)(\s*.*?\{)" flags="g" replace="\1${line.separator}\2" byline="true"/>      
      <replaceregexp file="@{file}" match="(\{) +" flags="g" replace="\1" byline="true"/>      
      <replaceregexp file="@{file}" match="(?s)[\r\n]+[^\r\n]+\{\s*\}" flags="g" replace="" byline="false"/>
      <replaceregexp file="@{file}" match="^\s+" flags="g" replace="" byline="false"/>
      <replaceregexp file="@{file}" match="\s+$" flags="g" replace="" byline="true"/>
      <replaceregexp file="@{file}" match="^(.*)$" flags="g" replace="      \1" byline="true"/>
      <basename property="@{context}.@{file}" file="@{file}"/>
      <loadfile property="file.@{context}.${@{context}.@{file}}" srcFile="@{file}"/>
      <delete file="@{file}"/>
    </sequential>
  </macrodef>  
  
  <target name="changes">
    <release-locate/>

    <replaceregexp file="${workspace}/CHANGES" match="&#x00E4;" replace="ae" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00C4;" replace="Ae" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00F6;" replace="oe" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00D6;" replace="Oe" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00FC;" replace="ue" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00DC;" replace="Ue" flags="g"/>
      
    <copy file="${workspace}/CHANGES" tofile="${workspace}/CHANGES.tmp" overwrite="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^\s+" replace="" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="(?s)^(.*?)[\r\n]+\d[\d\. x]+.*$" replace="\1" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(.*?)\s*$" replace="\1  " flags="g" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(\d[\.\d x]+)[^\r\n]*" replace="## \1" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^ +([A-Z]+:.*)\s*$" replace="\1" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="(?s)[\r\n]+ [^\r\n]+" replace="" flags="g" byline="false"/>  
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(## \d[\.\d]+ \d+)(  )" replace="\1\2" flags="g" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(## \d[\.\d]+ \d+x+)(  )" replace="\1 (upcoming version)\2" flags="g" byline="true"/>
    <loadresource property="changes">
      <file file="${workspace}/CHANGES.tmp"/>
    </loadresource>
    <delete file="${workspace}/CHANGES.tmp"/>
    <replaceregexp file="${workspace}/README.md"
        match="(?si)(# Changes\s+).*?(\[Read more\])" flags="g" byline="false"
        replace="\1${changes}${line.separator}${line.separator}\2"/>
    <tstamp>
      <format property="now.year" pattern="yyyy"/>
    </tstamp>    
    <replaceregexp file="${workspace}/README.md"
        match="(?si)(?&lt;=\(C\)\s)\d{4}\b" flags="g" byline="true"
        replace="${now.year}"/>  
    
    <replaceregexp file="${workspace}/README.md"
        match="(Seanox Devwex )\d+(\.\d+)*" flags="g" byline="false"
        replace="\1${release.version}"/>
    <replaceregexp file="${workspace}/README.md"
        match="(seanox-${ant.project.name}-)\d+(?:\.\d+)*((?:-win)*\.zip)" flags="g" byline="false"
        replace="\1${release.version}\2"/>
  </target>
  
  <target name="compress" if="windows">
    <delete file="${workspace.program}/${ant.project.name}.jar"/>
    <unzip src="${workspace.extras}/compress.zip" dest="${build}"/>
    <property name="compress1" value="a ${workspace.program}/${ant.project.name}.jar"/>
    <property name="compress2" value="-tzip -mm=Deflate -mx9 -md=64k -mfb=128 -mpass=10"/>
    <property name="compress3" value="${build.classes}/com"/>
    <exec executable="${build}/7z/7za.exe">
      <arg line="${compress1} ${compress2} ${compress3}"/>
    </exec>
  </target>
  
  <target name="compile">
    <release-locate/>
    <delete dir="${build}"/> 
    <mkdir dir="${build.sources}"/>    
    <copy todir="${build.sources}">
      <fileset dir="${workspace.sources}"/>
    </copy>    
    <release-insert/>
    <mkdir dir="${build.classes}"/>    
    <javac srcdir="${build.sources}" destdir="${build.classes}" 
        source="${compile.source}" target="${compile.target}" includeantruntime="false"
        debug="${compile.debug}" optimize="${compile.optimize}" deprecation="${compile.deprecation}">
      <compilerarg value="-Xlint:-options"/>
    </javac>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${build.classes}"/>
    </touch>
    <delete file="${workspace.program}/${ant.project.name}.jar"/>
    <zip destfile="${workspace.program}/${ant.project.name}.jar"
        basedir="${build.classes}" compress="true" level="9" filesonly="true"/>
    <condition property="windows" value="true">
      <os family="windows"/>
    </condition>
    <condition property="windows" value="true">
      <os family="unix"/>
    </condition>   
    <antcall target="compress"/>
    <length file="${workspace.program}/${ant.project.name}.jar" property="build.binary.length"/>
    <echo>---&gt; ${ant.project.name}.jar: ${build.binary.length} bytes</echo>
    <delete dir="${build}"/>
  </target>  
  
  <target name="keystore">
    <delete file="${workspace.program}/keystore"/>
    <exec executable="keytool">
      <arg line="-genkey -alias Server -dname 'CN=localhost' -ext 'SAN=DNS:local,IP:127.0.0.1'
          -keystore '${workspace.program}/keystore' -keypass changeIt -keyalg RSA -keysize 4096 
          -storetype PKCS12 -storepass changeIt
          -validity 365"/>
    </exec>
    <copy file="${workspace.program}/keystore" todir="${workspace.development}" overwrite="true"/>
  </target> 
  
  <fileset id="fileset.sources" dir="${workspace}">
    <include name=".settings/org.eclipse.jdt.core.prefs"/> 
    <include name="development/extras/compress.zip"/> 
    <include name="development/mediatypes/* File/* File.*"/>
    <include name="development/mediatypes/icons.html"/>
    <include name="development/build.xml"/>
    <include name="development/devwex.ini"/>
    <include name="documents/index.css"/>
    <include name="documents/index.html"/>
    <include name="manuals/seanox-icons.zip"/>
    <include name="manuals/seanox-devwex_de.html"/>
    <include name="manuals/seanox-devwex_en.html"/>
    <include name="manuals/seanox-devwex.css"/>  
    <include name="manuals/seanox-devwex.js"/>
    <include name="program/devwex.cmd"/>
    <include name="program/devwex.ini"/>
    <include name="program/devwex.sh"/>
    <include name="program/service.cmd"/>
    <include name="program/service-32.exe"/>
    <include name="program/service-32.license"/>
    <include name="program/service-64.exe"/>
    <include name="program/service-64.license"/>
    <include name="sources/com/seanox/devwex/Bootstrap.java"/>
    <include name="sources/com/seanox/devwex/Generator.java"/>
    <include name="sources/com/seanox/devwex/Initialize.java"/>
    <include name="sources/com/seanox/devwex/Loader.java"/>
    <include name="sources/com/seanox/devwex/Remote.java"/>
    <include name="sources/com/seanox/devwex/Section.java"/>
    <include name="sources/com/seanox/devwex/Server.java"/>
    <include name="sources/com/seanox/devwex/Service.java"/>
    <include name="sources/com/seanox/devwex/Worker.java"/>
    <include name="storage"/>
    <include name="system/common.css"/>
    <include name="system/index.css"/>
    <include name="system/index.html"/>
    <include name="system/media.css"/>
    <include name="system/status-2xx.html"/>
    <include name="system/status-3xx.html"/>
    <include name="system/status-4xx.html"/>
    <include name="system/status-5xx.html"/>
    <include name="system/status.css"/>
    <include name=".classpath"/>
    <include name=".project"/>
    <include name="CHANGES"/>
    <include name="LICENSE"/>
  </fileset> 
  
  <fileset id="fileset.release" dir="${build}/sources">
    <include name="documents/index.html"/>
    <include name="manuals/seanox-devwex_de.html"/>
    <include name="manuals/seanox-devwex_en.html"/> 
    <include name="program/devwex.cmd"/>
    <include name="program/devwex.ini"/>
    <include name="program/devwex.jar"/>
    <include name="program/devwex.sh"/>
    <include name="program/keystore"/> 
    <include name="storage"/>
    <include name="system/index.html"/>
    <include name="system/status-2xx.html"/>
    <include name="system/status-3xx.html"/>
    <include name="system/status-4xx.html"/>
    <include name="system/status-5xx.html"/>
    <include name="CHANGES"/>
    <include name="LICENSE"/>
  </fileset>
  
  <fileset id="fileset.release.windows" dir="${build}/sources">
    <include name="program/service.cmd"/> 
    <include name="program/service-32.exe"/> 
    <include name="program/service-32.license"/> 
    <include name="program/service-64.exe"/> 
    <include name="program/service-64.license"/> 
  </fileset>  
  
  <target name="release" depends="compile,keystore,changes">
    <delete dir="${build}"/>
    <mkdir dir="${build}/sources"/>
    <copy todir="${build}/sources">
      <fileset refid="fileset.sources"/>
    </copy>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${build}"/>
    </touch>  
    <delete file="${workspace.release}/seanox-${ant.project.name}-${release.version}-src.zip"/>
    <zip destfile="${workspace.release}/seanox-${ant.project.name}-${release.version}-src.zip"
        basedir="${build}/sources" compress="true" filesonly="false" defaultexcludes="false"/> 
    <touch datetime="${release.date}" pattern="yyyyMMdd"
        file="${workspace.release}/seanox-${ant.project.name}-${release.version}-src.zip"/>

    <compress-stylesheet context="documents" file="${build}/sources/documents/index.css"/>
    <compress-javascript context="manuals" file="${build}/sources/manuals/seanox-devwex.js"/>
    <compress-stylesheet context="manuals" file="${build}/sources/manuals/seanox-devwex.css"/>  
    <compress-stylesheet context="system" file="${build}/sources/system/common.css"/>
    <compress-stylesheet context="system" file="${build}/sources/system/media.css"/>
    <compress-stylesheet context="system" file="${build}/sources/system/index.css"/>
    <compress-stylesheet context="system" file="${build}/sources/system/status.css"/>
    <compress-markup file="${build}/sources/documents/index.html"/>
    <compress-markup file="${build}/sources/manuals/seanox-devwex_de.html"/>
    <compress-markup file="${build}/sources/manuals/seanox-devwex_en.html"/>    
    <compress-markup file="${build}/sources/system/index.html"/>
    <compress-markup file="${build}/sources/system/status-2xx.html"/>
    <compress-markup file="${build}/sources/system/status-3xx.html"/>
    <compress-markup file="${build}/sources/system/status-4xx.html"/>
    <compress-markup file="${build}/sources/system/status-5xx.html"/>   
    <release-insert/>
    <mkdir dir="${build}/release"/>
    <copy todir="${build}/release">
      <fileset refid="fileset.release"/>
    </copy>
    <copy file="${workspace}/program/${ant.project.name}.jar" todir="${build}/release/program"/>
    <copy file="${workspace}/program/keystore" todir="${build}/release/program"/>
    <mkdir dir="${build}/release/storage"/>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${build}"/>
    </touch>      
    <delete file="${workspace.release}/seanox-${ant.project.name}-${release.version}.zip"/>
    <zip destfile="${workspace.release}/seanox-${ant.project.name}-${release.version}.zip"
        basedir="${build}/release" compress="true" filesonly="false" defaultexcludes="false"/> 
    <touch datetime="${release.date}" pattern="yyyyMMdd"
        file="${workspace.release}/seanox-${ant.project.name}-${release.version}.zip"/>      
    
    <copy todir="${build}/release">
      <fileset refid="fileset.release.windows"/>
    </copy>    
    <release-insert/>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${build}"/>
    </touch>      
    <delete file="${workspace.release}/seanox-${ant.project.name}-${release.version}-win.zip"/>
    <zip destfile="${workspace.release}/seanox-${ant.project.name}-${release.version}-win.zip"
        basedir="${build}/release" compress="true" level="9" filesonly="false" defaultexcludes="false"/>
    <touch datetime="${release.date}" pattern="yyyyMMdd"
        file="${workspace.release}/seanox-${ant.project.name}-${release.version}-win.zip"/>    

    <delete dir="${build}"/>
  </target>  
</project>